##############################################
# case文を使った条件分岐の書き方
##############################################

# if文の条件分岐と異なり複数の条件の際の分岐に向いています

# 1の時 lucky
# 2~4の時 unlucky
# それ以外の時 unknown
# を返します
# 下記のようにメソッドを使う場合はreturnで返してしまえばいいです。
# enumなどとよく組み合わせて使われます

def lucky(input)
  case input
    when 1
      return 'lucky'
    when 2..4
      return 'unlucky'
    else
      return 'unknown'
  end
end

p lucky(1)
# => "lucky"

p lucky(2)
# => "unlucky"

p lucky(4)
# => "unlucky"

p lucky(5)
# => "unknown"

##############################################
# if文を使った条件分岐の書き方
##############################################

# 条件が複数に渡る場合は eachを使いましょう
# if文は一番簡単な使い方だと　もし〜なら〜するといった書き方をします

# 下記はもし hogeが0より大きい　なら '0より大きい' と表示する

hoge = 1

if hoge > 0
  p '0より大きい'
end
# => "0より大きい"

# 次に　もし〜なら〜する　そうじゃないなら〜する　の書き方は

# 下記ももし hogeが5より大きいなら '5より大きい'　よ表示し、そうじゃないなら '5以下' と表示する例です

if hoge > 5
  p '5より大きい'
else
  p '5以下'
end
# => "5以下"

# 条件が一つの場合短縮して書くことができます

# 下の２つの書き方はいずれも同じことを表しています

if hoge > 0
  p '0より大きい'
end

p '0より大きい' if hoge > 0

# elseの場合も三項演算子を使うことで短縮できます

# 条件 ? 条件にあったら : 条件にあわなかったら

p hoge > 5 ? '5より大きい' : '5以下'
