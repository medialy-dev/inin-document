##############################################
# 配列の作り方
##############################################

# 空配列の作り方

hoge1 = []
p hoge1

# 初期値のある数値の配列の作り方

hoge2 = [1, 3, 5, 7]
p hoge2

# 初期値のある文字列の配列の作り方

hoge3 = %w(a i u e o)
p hoge3

# 初期値のあるシンボルの配列の作り方

hoge4 = %i(a i u e o)
p hoge4

##############################################
# 配列への追加
##############################################

# 演算子(<<)を使って配列を追加する

hoge5 = []
hoge5 << 1
p hoge5

# pushメソッドを使って配列を追加する

hoge6 = []
hoge6.push(1)
p hoge6

##############################################
# 配列(array)から指定位置の要素の取り出し方
##############################################

hoge7 = [1, 3]

# 配列(array)の要素は0から開始
# 上記だと [1, 3] は
# hoge7[0]が1に該当
# hoge7[1]が3に該当

p hoge7[0]
p hoge7[1]

# 配列(array)からfor文で順番に要素を取得する場合eachを使います

hoge7.each do |h|
  p h
end

##############################################
# 配列(array)から要素を削除する
##############################################

# 配列(array)に一致した要素を全て削除する

hoge8 = [1, 1]
hoge8.delete(1)
p hoge8

# 空の配列(array)が返ってくる

# 配列(array)の指定位置の要素を削除する

# これは配列(array)から指定位置の要素の取り出し方（リンク）と同様の位置の指定です

hoge9 = [1, 3]
hoge9.delete_at(0)

##############################################
# 配列(array)から長さを求める
##############################################

hoge10 = [1, 3]
p hoge10.length
p hoge10.size

# lengthまたはsizeを使う。countは内部でeach処理を行い算出しているため遅くなる。
